# Copyright 2023 StreamNative, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{- define "packageserver.deployment-spec" }}
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.package.maxUnavailable }}
      maxSurge: {{ .Values.package.maxSurge }}
  replicas: {{ .Values.package.replicaCount }}
  selector:
    matchLabels:
      app: packageserver
  template:
    metadata:
      labels:
        app: packageserver
    spec:
      serviceAccountName: olm-operator-serviceaccount
      {{- if .Values.package.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.package.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.package.tolerations }}
      tolerations:
        {{- toYaml .Values.package.tolerations | nindent 6 }}
      {{- end }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- toYaml .Values.image.pullSecrets | nindent 6 }}
      {{- end }}
      containers:
      - name: packageserver
        command:
        - /bin/package-server
        - -v=4
        {{- if .Values.watchedNamespaces }}
        - --watched-namespaces
        - {{ .Values.watchedNamespaces }}
        {{- end }}
        - --secure-port
        - {{ .Values.package.service.internalPort | quote }}
        - --global-namespace
        - {{ .Values.catalog_namespace }}
        {{- if .Values.debug }}
        - --debug
        {{- end }}
        {{- if .Values.package.commandArgs }}
        - {{ .Values.package.commandArgs }}
        {{- end }}
        image: {{ include "olm.packageImage" . }}
        imagePullPolicy: {{ .Values.package.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.package.service.internalPort }}
        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /healthz
            port: {{ .Values.package.service.internalPort }}
        readinessProbe:
          httpGet:
            scheme: HTTPS
            path: /healthz
            port: {{ .Values.package.service.internalPort }}
        terminationMessagePolicy: FallbackToLogsOnError
        {{- if .Values.package.resources }}
        resources:
{{ toYaml .Values.package.resources | indent 10 }}
        {{- end }}
        {{- if .Values.package.securityContext }}
        securityContext:
          runAsUser: {{ .Values.package.securityContext.runAsUser }}
        {{- end }}
        volumeMounts:
        - name: tmpfs
          mountPath: /tmp
      volumes:
      - name: tmpfs
        emptyDir: {}
{{- end -}}
